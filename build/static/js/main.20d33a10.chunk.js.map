{"version":3,"sources":["components/Footer.jsx","components/Note.jsx","components/Notification.jsx","services/notes.js","App.jsx","index.js"],"names":["Footer","style","color","fontStyle","fontSize","Note","note","toggleImportant","label","important","className","content","onClick","Notification","message","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","map","find","n","changeNote","returnNote","catch","err","concat","setTimeout","toggleImportantOf","onSubmit","e","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"oLAeeA,EAfA,WAOb,OACE,sBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,yHCGSC,EAXF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAmCC,QCE1BK,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,qBAAKJ,UAAU,QAAf,SACGI,K,gBCJDC,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCuE5BK,MAhFf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,QAAQC,IAAI,UACZC,IACGpB,MAAK,SAAAqB,GACJX,EAASW,QAEZ,IACHH,QAAQC,IAAI,SAAUV,EAAMa,OAAQ,SAEpC,IAsCMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAAApC,GAAI,OAAuB,IAAnBA,EAAKG,aAEhE,OACE,sBAAKC,UAAU,MAAf,UACE,uCACCuB,GAAgB,cAAC,EAAD,CAAcnB,QAASmB,IACxC,8BACE,yBAAQrB,QAAS,kBAAMoB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BAEIU,EAAYE,KAAI,SAAArC,GACd,OAAO,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,gBAAiB,kBArCxC,SAACgB,GACzB,IAAMjB,EAAOqB,EAAMiB,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,KAAOA,KAChCuB,EAAU,2BAAQxC,GAAR,IAAcG,WAAYH,EAAKG,YAE/C6B,EAAmBf,EAAIuB,GACpB5B,MAAK,SAAA6B,GACJnB,EAASD,EAAMgB,KAAI,SAAArC,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAOyC,SAEpDC,OAAM,SAAAC,GACLf,EAAgB,YAAD,OACD5B,EAAK4C,OADJ,qCAGfC,YAAW,WACTjB,EAAgB,QACf,KACHN,EAASD,EAAMe,QAAO,SAAAG,GAAC,OAAIA,EAAEtB,KAAOA,SAsB8B6B,CAAkB9C,EAAKiB,MAAnEjB,EAAKiB,SAI7B,uBAAM8B,SAxDM,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAa,CACjB7C,QAASkB,EACT4B,MAAM,IAAIC,MAAOC,cACjBlD,UAAWmD,KAAKC,SAAW,GAC3BtC,GAAII,EAAMa,OAAS,GAErBF,EAAmBkB,GAChBtC,MAAK,SAAA6B,GACJnB,EAASD,EAAMuB,OAAOH,IACtBjB,EAAW,QA6Cb,UACE,uBAAOgC,MAAOjC,EAASkC,SAvBJ,SAACT,GACxBxB,EAAWwB,EAAEU,OAAOF,UAuBhB,wBAAQG,KAAK,SAAb,oBAEF,cAAC,EAAD,QC5ENC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.20d33a10.chunk.js","sourcesContent":["const Footer = () => {\n  const footStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footStyle}>\n      <br />\n      <em>Note app, Thu Rein Tun, Department Of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nexport default Footer","import React from 'react'\n\nconst Note = ({ note, toggleImportant }) => {\n  const label = note.important ? 'make not important' : 'make important'\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportant}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  update\n}","import { useEffect, useState } from \"react\";\nimport Footer from \"./components/Footer\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport noteService from './services/notes'\n\nfunction App() {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    noteService.getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n  const addNote = (e) => {\n    e.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    }\n    noteService.create(noteObject)\n      .then(returnNote => {\n        setNotes(notes.concat(returnNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportantOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changeNote = { ...note, important: !note.important }\n\n    noteService.update(id, changeNote)\n      .then(returnNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnNote))\n      })\n      .catch(err => {\n        setErrorMessage(\n          `the note ${note.concat} was already deleted from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value)\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n\n  return (\n    <div className=\"App\">\n      <h1>Notes</h1>\n      {errorMessage && <Notification message={errorMessage} />}\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {\n          notesToShow.map(note => {\n            return <Note key={note.id} note={note} toggleImportant={() => toggleImportantOf(note.id)} />\n          })\n        }\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">add</button>\n      </form>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}